RMM_fnc_reducer_ureform = {
	private ["_data","_group","_position"];
	_data = _this select 0;
	_group = _this select 1;
	_position = _this select 2;

	private ["_type","_weapons","_magazines","_vehicle","_vehicle_pos"];
	_type = _data select 0;
	_weapons = _data select 1;
	_magazines = _data select 2;
	_vehicle = _data select 3;
	_vehicle_pos = _data select 4;
	
	private "_unit";
	_unit = _group createunit [_type, _position, [], 50, "form"];

	removeallweapons _unit;
	removeallitems _unit;
	{_unit addweapon _x} foreach _weapons;
	{_unit addmagazine _x} foreach _magazines;

	if (count _vehicle_pos > 0) then {
		switch (_vehicle_pos select 0) do {
			case "cargo": {
				_unit moveincargo _vehicle;
			};
			case "commander": {
				_unit moveincommander _vehicle;
			};
			/*
			case "turret": {
				private "_index";
				_index = _vehicle_pos select 1;
				_unit moveinturret [_vehicle, _index];
			};
			*/
		};
	};
};

RMM_fnc_reducer_ureduce = {
	private "_unit";
	_unit = _this select 0;

	private ["_type", "_weapons", "_magazines", "_vehicle", "_vehicle_pos"];
	_type = typeof _unit;
	_weapons = weapons _unit;
	_magazines = magazines _unit;
	_vehicle = assignedvehicle _unit;
	_vehicle_pos = assignedvehiclerole _unit;

	if (count _vehicle_pos == count (_vehicle_pos - ["driver","turret"])) then {
		if (vehicle _unit != _unit) then {
			unassignvehicle _unit;
			_unit setposasl [0,0,0];
		};
		deletevehicle _unit;
		[_type, _weapons, _magazines, _vehicle, _vehicle_pos];
	} else {
		[];
	};
};

RMM_fnc_reducer_reform = {
	private "_group";
	_group = _this select 0;

	if (not (_group getvariable "RMM_reducer_reduced")) exitwith {};

	private "_data";
	_data = _group getvariable "RMM_reducer_grpdata";

	private ["_list","_params"];
	_list = _data select 0;
	_params = _data select 1;

	private ["_behaviour","_combatmode","_skill"];
	_behaviour = _params select 0;
	_combatmode = _params select 1;
	_skill = _params select 2;

	private "_leader";
	_leader = leader _group;
	_leader setskill _skill;
	{_leader enableAI _x} foreach ["TARGET","AUTOTARGET"];

	_group setbehaviour _behaviour;
	_group setcombatmode _combatmode;

	private "_position"
	_position = getpos _leader;
	{
		[_x,_group,_position] call RMM_fnc_reducer_ureform;
	} foreach _list;

	_group setvariable ["RMM_reducer_reduced",false];
	_group setvariable ["RMM_reducer_expires",time + 60];
	_group setvariable ["RMM_reducer_grpdata",nil];
};

RMM_fnc_reducer_reduce = {
	private "_group";
	_group = _this select 0;

	if (time < (_group getvariable "RMM_reducer_expires")) exitwith {};

	private "_leader";
	_leader = leader _group;
	_leader setskill 0;
	{_leader disableAI _x} foreach ["TARGET","AUTOTARGET"];

	private "_params";
	_params = [behaviour _leader, combatmode _group, skill _leader];

	_group setbehaviour "careless";
	_group setcombatmode "blue";
	
	private "_list";
	_list = [];

	{
		if (alive _x) then {
			private "_return";
			_return = _x call RMM_fnc_reducer_ureduce;
			if (count _return > 0) then {
				_list set [count _list, _return];
			};
		};
	} foreach ((units _group) - [_leader]);

	_group setvariable ["RMM_reducer_reduced",true];
	_group setvariable ["RMM_reducer_grpdata",[_list, _params]];
};
/*%FSM<COMPILE "C:\Program Files\Bohemia Interactive\Tools\FSM Editor Personal Edition\scriptedFSM.cfg, freezer">*/
/*%FSM<HEAD>*/
/*
item0[] = {"func_init",2,250,200.000000,150.000000,300.000000,200.000000,0.000000,"func init"};
item1[] = {"not_initdone",4,218,200.000000,75.000000,300.000000,125.000000,1.000000,"not initdone"};
item2[] = {"_",4,218,75.000000,150.000000,175.000000,200.000000,0.000000,""};
item3[] = {"start",0,4346,75.000000,75.000000,175.000000,125.000000,0.000000,"start"};
item4[] = {"count___0",4,218,200.000000,225.000000,300.000000,275.000000,1.000000,"count > 0"};
item5[] = {"wait",3,250,200.000000,300.000000,300.000000,350.000000,0.000000,"wait"};
item6[] = {"time___wait",4,218,75.000000,300.000000,175.000000,350.000000,0.000000,"time > wait"};
item7[] = {"check",3,250,75.000000,225.000000,175.000000,275.000000,0.000000,"check"};
item8[] = {"_",8,218,-50.000000,225.000000,50.000000,275.000000,0.000000,""};
item9[] = {"end",1,250,-175.000000,225.000000,-75.000000,275.000000,0.000000,"end"};
item10[] = {"exit",1,250,-175.000000,75.000000,-75.000000,125.000000,0.000000,"exit"};
item11[] = {"not_isserver",4,218,-50.000000,75.000000,50.000000,125.000000,2.000000,"not isserver"};
link0[] = {0,2};
link1[] = {1,0};
link2[] = {2,7};
link3[] = {3,1};
link4[] = {3,2};
link5[] = {3,11};
link6[] = {4,5};
link7[] = {5,6};
link8[] = {6,7};
link9[] = {7,4};
link10[] = {7,8};
link11[] = {8,9};
link12[] = {11,10};
globals[] = {25.000000,1,0,0,0,640,480,1,201,6316128,1,-155.715637,354.836761,477.742889,-108.116013,800,918,1};
window[] = {2,-1,-1,-1,-1,1142,154,1339,203,3,818};
*//*%FSM</HEAD>*/
class FSM
{
  fsmName = "freezer";
  class States
  {
    /*%FSM<STATE "func_init">*/
    class func_init
    {
      name = "func_init";
      init = /*%FSM<STATEINIT""">*/"RMM_fnc_frzr_candelete = {" \n
       "	private [""_reference"",""_logic"",""_players""];" \n
       "	_reference = _this select 0;" \n
       "	if (_reference getvariable ""RMM_frzr_frozen"") exitwith {};" \n
       "	_logic = _this select 1;" \n
       "	_players = _this select 2;" \n
       "	{" \n
       "		private ""_u"";" \n
       "		_u = _x;" \n
       "		if ({_u distance _x < (_spawn_range * 1.1)} count _players > 0) exitwith {false};" \n
       "		true;" \n
       "	} foreach units (_reference getvariable ""RMM_frzr_group"");" \n
       "};" \n
       "" \n
       "RMM_fnc_frzr_ucreate = {" \n
       "	private [""_data"",""_group"",""_logic""];" \n
       "	_data = _this select 0;" \n
       "	_group = _this select 1;" \n
       "	_logic = _this select 2;" \n
       "" \n
       "	private [""_type"",""_position"",""_weapons"",""_magazines"",""_vehicle"",""_vehicle_pos"",""_damage"",""_skill"",""_rank""];" \n
       "	_type = _data select 0;" \n
       "	_position = _data select 1;" \n
       "	_weapons = _data select 2;" \n
       "	_magazines = _data select 3;" \n
       "	_vehicle = _data select 4;" \n
       "	_vehicle_pos = _data select 5;" \n
       "	_damage = _data select 6;" \n
       "	_skill = _data select 7;" \n
       "	_rank = _data select 8;" \n
       "	_custom_init = _logic getvariable ""custom_init"";" \n
       "	" \n
       "	private [""_unit""];" \n
       "	_unit = _group createUnit [_type, _position, [], 0, ""NONE""];" \n
       "	_unit setpos _position;" \n
       "" \n
       "	_unit setskill _skill;" \n
       "	_unit setrank _rank;" \n
       "	" \n
       "	{_unit call _x} foreach _custom_init;" \n
       "" \n
       "	removeallweapons _unit;" \n
       "	removeallitems _unit;" \n
       "	{_unit addweapon _x} foreach _weapons;" \n
       "	{_unit addmagazine _x} foreach _magazines;" \n
       "" \n
       "	_unit setdamage _damage;" \n
       "" \n
       "	if (count _vehicle_pos > 0) then {" \n
       "		switch(_vehicle_pos select 0) do {" \n
       "			case ""Driver"": {" \n
       "				_unit moveInDriver _vehicle;" \n
       "			};" \n
       "			case ""Commander"": {" \n
       "				_unit moveInCommander _vehicle;" \n
       "			};" \n
       "			case ""Cargo"": {" \n
       "				_unit moveInCargo _vehicle;" \n
       "			};" \n
       "			case ""Turret"": {" \n
       "				_unit moveInGunner _vehicle;" \n
       "			};" \n
       "		};" \n
       "	};" \n
       "};" \n
       "" \n
       "RMM_fnc_frzr_udelete = {" \n
       "	private [""_type"", ""_position"", ""_weapons"", ""_magazines"", ""_vehicle"", ""_vehicle_pos"", ""_damage"", ""_skill"", ""_rank""];" \n
       "	_type = typeof _this;" \n
       "	_position = getpos _this;" \n
       "	_weapons = weapons _this;" \n
       "	_magazines = magazines _this;" \n
       "	_vehicle = assignedVehicle _this;" \n
       "	_vehicle_pos = assignedVehicleRole _this;" \n
       "	_damage = damage _this;" \n
       "	_skill = skill _this;" \n
       "	_rank = rank _this;" \n
       "" \n
       "	[_type, _position, _weapons, _magazines, _vehicle, _vehicle_pos, _damage, _skill, _rank];" \n
       "};" \n
       "" \n
       "RMM_fnc_frzr_create = {" \n
       "	private [""_reference"",""_logic""];" \n
       "	_reference = _this select 0;" \n
       "	if (not (_reference getvariable ""RMM_frzr_frozen"")) exitwith {};" \n
       "	_logic = _this select 1;" \n
       "" \n
       "	private [""_data""];" \n
       "	_data = _reference getvariable ""RMM_frzr_grpdata"";" \n
       "" \n
       "	private [""_list"",""_waypoints"",""_params""];" \n
       "	_list = _data select 0;" \n
       "	_waypoints = _data select 1;" \n
       "	_params = _data select 2;" \n
       "	" \n
       "	private [""_side"",""_behaviour"",""_combatmode"",""_speedmode"",""_formation""];" \n
       "	_side = _params select 0;" \n
       "	_behaviour = _params select 1;" \n
       "	_combatmode = _params select 2;" \n
       "	_speedmode = _params select 3;" \n
       "	_formation = _params select 4;" \n
       "" \n
       "	private ""_group"";" \n
       "	_group = creategroup _side;" \n
       "	if (isnull _group) exitwith {};" \n
       "" \n
       "	_group setspeedmode _speedmode;" \n
       "	_group setformation _formation;" \n
       "	_group setbehaviour _behaviour;" \n
       "	_group setcombatmode _combatmode;" \n
       "" \n
       "	private [""_array"",""_current""];" \n
       "	_array = _waypoints select 0;" \n
       "	_current = _waypoints select 1;" \n
       "	{" \n
       "		private ""_waypoint"";" \n
       "		_waypoint = _group addwaypoint [(_x select 0), 0];" \n
       "		_waypoint setwaypointtype (_x select 1);" \n
       "		_waypoint setwaypointbehaviour (_x select 2);" \n
       "		_waypoint setwaypointspeed (_x select 3);" \n
       "		_waypoint setwaypointcombatmode (_x select 4);" \n
       "		_waypoint setwaypointformation (_x select 5);" \n
       "		_waypoint setwaypointstatements (_x select 6);" \n
       "		_waypoint setwaypointtimeout (_x select 7);" \n
       "		_waypoint setwaypointhouseposition (_x select 8);" \n
       "	} foreach _array;" \n
       "	_group setcurrentwaypoint [_group,_current];" \n
       "" \n
       "	{" \n
       "		[_x,_group,_logic] call RMM_fnc_frzr_ucreate;" \n
       "	} foreach _list;" \n
       "" \n
       "	{[_group,_logic] call _x} foreach (_logic getvariable ""_custom_init"");" \n
       "" \n
       "	_reference setvariable [""RMM_frzr_frozen"",false];" \n
       "	_reference setvariable [""RMM_frzr_group"",_group];" \n
       "	_reference setvariable [""RMM_frzr_grpdata"",nil];" \n
       "};" \n
       "" \n
       "RMM_fnc_frzr_delete = {" \n
       "	private [""_reference""];" \n
       "	_reference = _this select 0;" \n
       "" \n
       "	if (_reference getvariable ""RMM_frzr_frozen"") exitwith {};" \n
       "" \n
       "	private [""_group"",""_params"",""_array"",""_waypoints"",""_list""];" \n
       "	_group = _reference getvariable ""RMM_frzr_group"";" \n
       "" \n
       "	_params = [side _group, behaviour (leader _group), combatmode _group, speedmode _group, formation _group];" \n
       "" \n
       "	_array = [];" \n
       "	{" \n
       "		private ""_waypoint"";" \n
       "		_waypoint = [" \n
       "			waypointposition _x," \n
       "			waypointtype _x," \n
       "			waypointbehaviour _x," \n
       "			waypointspeed _x," \n
       "			waypointcombatmode _x," \n
       "			waypointformation _x," \n
       "			waypointstatements _x," \n
       "			waypointtimeout _x," \n
       "			waypointhouseposition _x" \n
       "		];" \n
       "		_array set [count _array, _waypoint];" \n
       "	} foreach (waypoints _group);" \n
       "	_waypoints = [_array, currentwaypoint _group];" \n
       "" \n
       "	_list = [];" \n
       "	{" \n
       "		if (alive _x) then {" \n
       "			_list set [count _list, (_x call RMM_fnc_frzr_udelete)];" \n
       "		};" \n
       "	} foreach (units _group);" \n
       "	_group call RMM_fnc_deleteentity;" \n
       "" \n
       "	_reference setvariable [""RMM_frzr_frozen"",true];" \n
       "	_reference setvariable [""RMM_frzr_grpdata"",[_list,_waypoints,_params]];" \n
       "};" \n
       "" \n
       "RMM_fnc_frzr_refsync = {" \n
       "	private [""_reference""];" \n
       "	_reference = _this select 0;" \n
       "" \n
       "	if (_reference getvariable ""RMM_frzr_frozen"") exitwith {};" \n
       "" \n
       "	private ""_group"";" \n
       "	_group = _reference getvariable ""RMM_frzr_group"";" \n
       "	if (isnil {_group}) exitwith {deletelocation _reference};" \n
       "	if (isnull _group) exitwith {deletelocation _reference};" \n
       "	if ({alive _x} count (units _group) == 0) exitwith {deletelocation _reference};" \n
       "" \n
       "	_reference setPosition (getpos (leader _group));" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="check";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"not isnil ""RMM_fnc_deleteentity"""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "start">*/
    class start
    {
      name = "start";
      init = /*%FSM<STATEINIT""">*/"/*" \n
       "	Freezer" \n
       "	Author(s):" \n
       "		Rommel" \n
       "	" \n
       "	Description:" \n
       "		This script deletes and recreates groups depending on their distance to players, aimed to reduce load greatly" \n
       "	Example:" \n
       "		[this] execfsm ""scriptname""" \n
       "*/" \n
       "" \n
       "private [""_logic""];" \n
       "_logic = _this select 0;" \n
       "" \n
       "private [""_references""];" \n
       "_references = [];" \n
       "" \n
       "{" \n
       "	_reference = createlocation [""strategic"", [0,0,0], 1, 1];" \n
       "	_reference setside (side _x);" \n
       "	_reference setvariable [""RMM_frzr_frozen"",false];" \n
       "	_reference setvariable [""RMM_frzr_group"",group _x];" \n
       "	_references set [count _references,_reference];" \n
       "} foreach (synchronizedObjects _logic);" \n
       "" \n
       "if (isnil {_logic getvariable ""_custom_init""}) then {_logic setvariable [""custom_init"",[]]};" \n
       "" \n
       "_logic setvariable [""references"",_references];" \n
       "" \n
       "private [""_spawn_range""];" \n
       "_spawn_range = _logic getvariable ""spawn_range"";" \n
       "if (isnil ""_spawn_range"") then {_spawn_range = 2400};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "not_isserver">*/
        class not_isserver
        {
          priority = 2.000000;
          to="exit";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"not isserver"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "not_initdone">*/
        class not_initdone
        {
          priority = 1.000000;
          to="func_init";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"isnil ""RMM_fnc_frzr_ucreate"""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="check";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"not isnil ""RMM_fnc_deleteentity"""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "wait">*/
    class wait
    {
      name = "wait";
      init = /*%FSM<STATEINIT""">*/"_wait = time + 5 + random 1;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "time___wait">*/
        class time___wait
        {
          priority = 0.000000;
          to="check";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"time > _wait"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "check">*/
    class check
    {
      name = "check";
      init = /*%FSM<STATEINIT""">*/"private ""_players"";" \n
       "_players = [] call BIS_fnc_listPlayers;" \n
       "" \n
       "{" \n
       "	private [""_reference""];" \n
       "	_reference = _x;" \n
       "	[_x] call RMM_fnc_frzr_refsync;" \n
       "	if (isnull _reference) then {" \n
       "		_references = _references - [_reference];" \n
       "	} else {" \n
       "		if (_reference getvariable ""RMM_frzr_frozen"") then {" \n
       "			if ({(position _reference) distance _x < _spawn_range} count _players > 0) then {" \n
       "				[_reference,_logic] call RMM_fnc_frzr_create;" \n
       "			};" \n
       "		} else {" \n
       "			if ([_reference,_logic,_players] call RMM_fnc_frzr_candelete) then {" \n
       "				[_reference,_logic] call RMM_fnc_frzr_delete;" \n
       "			};" \n
       "		};" \n
       "	};" \n
       "} foreach _references;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "count___0">*/
        class count___0
        {
          priority = 1.000000;
          to="wait";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"count _references > 0"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="end";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "end">*/
    class end
    {
      name = "end";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "exit">*/
    class exit
    {
      name = "exit";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
      };
    };
    /*%FSM</STATE>*/
  };
  initState="start";
  finalStates[] =
  {
    "end",
    "exit",
  };
};
/*%FSM</COMPILE>*/